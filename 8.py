'''
Task 8
--------------------------1--------------------------
1.	Напишите программу которые будет ловить IndexError, когда
вы пытаетесь взять индекс элемента, которого нет в списке.

РЕШЕНИЕ:
some_lst = ['hello word', '12', 23, 15, '128']
try:
    index = int(input('input index: '))
    print(some_lst)
    print(some_lst[index])
except IndexError:
    print('list index out of range')

--------------------------2--------------------------
2.	Напишите программу которые будет ловить TypeError, когда
вы пытаетесь скаткатенировать строку и число.

РЕШЕНИЕ:
some_str = 'hello world'
some_numb = 125
try:
    print(some_str, "\n", some_numb)
    print(some_str + some_numb)
except TypeError:
    print('can only concatenate str (not "int") to str')

--------------------------3--------------------------
3.	Напишите программу которая вычисляет площадь треугольника
по формуле Герона, однако если пользователь введёт длину хоть
одной стороны треугольника равную 0, то программа должна бросить
исключение ArithmeticError.

РЕШЕНИЕ:
import math
try:
    side_a, side_b, side_c = map(int, input('input sides a, b, c: ').split())
    if side_a == 0 or side_b == 0 or side_c == 0:
        raise ArithmeticError
    half_per = (side_a + side_b + side_c) / 2
    area = math.sqrt(half_per * (half_per - side_a) * (half_per - side_b) * (half_per - side_c))
    print(area)
except ArithmeticError:
    print('side cannot be zero')

--------------------------4--------------------------
4. Дана строка. Проверьте есть ли в ней цифры, иначе бросьте ValueError.

РЕШЕНИЕ:
try:
    some_str = input("input str: ")
    print(some_str)
    if not any(char.isdigit() for char in some_str):
        raise ValueError('str does not contain numbers')
    else:
        print("str contains numbers")
except ValueError as e:
    print(f'{type(e)} {e}')

--------------------------5--------------------------
5.	Дан словарь, который содержит некоторые ключи и значения по этим ключам,
пользователь не знает этих ключей. Бросьте ошибку KeyError в том случае когда
пользователь пытается просмотреть значение по ключу, которого нет в словаре.

РЕШЕНИЕ:
school = {'9a': 25, '8b': 27, '10c': 23, '5d': 26, '6e': 25}
try:
    some_key = input('input key: ')
    print(school[some_key])
    if some_key not in school:
        raise KeyError
except KeyError as e:
    print(f'{type(e)} invalid key')

--------------------------6--------------------------
6.	Даны два списка чисел. Найдите все числа, которые не содержатся
одновременно в этих двух списках.

РЕШЕНИЕ:
some_list_1 = [1, 3, 5, 7]
some_list_2 = [5, 7, 9, 11]
print(set(some_list_1) - set(some_list_2) | set(some_list_2) - set(some_list_1))

--------------------------7--------------------------
7.	Во входной строке записана последовательность чисел через пробел.
Для каждого числа выведите слово YES (в отдельной строке), если это
число ранее встречалось в последовательности или NO, если не встречалось.

РЕШЕНИЕ:
some_str = '1 1 5 9 3 5 25 9 3 10 3'
some_lst = list(map(int, some_str.split()))
some_set = set()
for i in some_lst:
    if i in some_set:
        print(i, 'YES')
    else:
        print(i, 'NO')
        some_set.add(i)

--------------------------8--------------------------
8.	В ходе исследований ученые делают некие замеры, результаты которых
заносят в базу данных. Однако для анализа результатов нет необходимости
держать в базе "лишние", повторяющиеся данные. Напишите программу, которая
выводит максимальное количество записей, после удаления которых анализ
результатов будет произведен верно. Список элементов вводится через пробел.

Sample Input:
6311 9423 142 142 8654 909 Error 6311 142 909 404 502 828 404 9423
Sample Output:
6

РЕШЕНИЕ:
some_str = '6311 9423 142 142 8654 909 Error 6311 142 909 404 502 828 404 9423'
print(len(list(some_str.split())) - len(set(some_str.split())))

--------------------------9--------------------------
9.	Создайте словарь, связав его с переменной school, и наполните данными,
которые бы отражали количество учащихся в разных 9 классах
(9а, 9б, 9в, 9м, 9ф и т. п.). Внесите изменения в словарь согласно
следующему:
а) в одном из классов изменилось количество учащихся
б) в школе появился новый класс.
в) в школе был расформирован (удален) другой класс.
г) Вычислите общее количество учащихся 9 классов в школе.

РЕШЕНИЕ:
school = {'9a': 25, '9b': 27, '9c': 23, '9d': 26, '9e': 25}
school['9a'] = 23
school['9f'] = 28
school.pop('9b')
numb_of_pupil = sum(school.values())

--------------------------10--------------------------
10.	Вам дан словарь, состоящий из пар слов. Каждое слово является
синонимом к парному ему слову. Все слова в словаре различны.
Для введённого слова вывести его синоним или написать что его нет.

РЕШЕНИЕ:
some_dict = {
    'good': 'nice',
    'ugly': 'unattractive',
    'bad': 'terrible'
}
print(some_dict)
some_str = input('input word: ')
if some_str in some_dict:
    print(some_dict[some_str])
else:
    for key, value in some_dict.items():
        if value == some_str:
            print(key)
            break
    else:
        print('no synonym in dict')

--------------------------11--------------------------
11.	Стремясь стать программистом, важно не только постоянно учиться,
но и понимать язык, на котором говорят Ваши коллеги. Чтобы систематизировать
знания, Вы решили написать программу, которая составляет маленький словарь
из сленговых выражений. Программа принимает на вход строки до символа точки,
состоящие из понятий и их определений, разделенных знаком тире. После
заполнения словаря программе передается натуральное число m – количество
запросов, а затем m строк, каждая из которых представляет собой одно понятие.
Если это понятие есть в словаре, необходимо вывести его определение, в обратном
случае – "Не найдено".

Sample Input:
DNS – компьютерная система для получения, хранения и обработки информации о доменных именах
Интрасеть – это замкнутая внутренняя сеть какой-либо организации, работающая по Интернет-протоколу TCP/IP
Фича – недокументированная дополнительная возможность, фишка
Мейнфрейм – большой компьютер, имеющий высокую вычислительную мощность
.
4
Бэкап
Фича
Линуксоид
DNS

Sample Output:
Не найдено
недокументированная дополнительная возможность, фишка
Не найдено
компьютерная система для получения, хранения и обработки информации о доменных именах

РЕШЕНИЕ:
slang_dict = {}
while True:
    tmp_str = input('input dictionary in format "concept - definition" (input "." to work with dict, "stop" for stop program): ')
    if tmp_str == 'stop':
        break
    if tmp_str != '.':
        key, value = tmp_str.split("–")
        key = key.strip()
        value = value.strip()
        slang_dict[key] = value
    else:
        numb_request = int(input('enter number of requests: '))
        count = 0
        while count < numb_request:
            request = input(f'input request N {count + 1}: ')
            if request in slang_dict:
                print(slang_dict[request])
            else:
                print('not found')
            count += 1

'''